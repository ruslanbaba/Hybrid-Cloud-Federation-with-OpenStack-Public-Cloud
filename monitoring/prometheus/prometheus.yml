# Enterprise Hybrid Cloud Federation - Prometheus Configuration
# Comprehensive monitoring across OpenStack and public clouds

global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s
  external_labels:
    federation_cluster: 'hybrid-cloud-federation'
    environment: '{{ .Values.environment }}'
    region: '{{ .Values.region }}'

rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - 'alertmanager:9093'
      scheme: https
      tls_config:
        ca_file: /etc/prometheus/certs/ca.pem
        cert_file: /etc/prometheus/certs/prometheus.pem
        key_file: /etc/prometheus/certs/prometheus-key.pem

# Remote write for long-term storage
remote_write:
  - url: "https://prometheus-remote.federation.local/api/v1/write"
    tls_config:
      ca_file: /etc/prometheus/certs/ca.pem
      cert_file: /etc/prometheus/certs/prometheus.pem
      key_file: /etc/prometheus/certs/prometheus-key.pem
    headers:
      X-Federation-Cluster: "hybrid-cloud-federation"
    queue_config:
      capacity: 10000
      max_shards: 50
      max_samples_per_send: 2000

# Scrape configurations
scrape_configs:
  # OpenStack Infrastructure Monitoring
  - job_name: 'openstack-api'
    scheme: https
    tls_config:
      ca_file: /etc/prometheus/certs/ca.pem
      insecure_skip_verify: false
    static_configs:
      - targets:
        - 'keystone.openstack.local:5000'
        - 'nova.openstack.local:8774'
        - 'neutron.openstack.local:9696'
        - 'glance.openstack.local:9292'
        - 'cinder.openstack.local:8776'
        - 'heat.openstack.local:8004'
        - 'barbican.openstack.local:9311'
    scrape_interval: 30s
    metrics_path: '/metrics'
    basic_auth:
      username: '{{ .Values.openstack.monitoring_user }}'
      password_file: '/etc/prometheus/secrets/openstack-password'

  # OpenStack Exporter for detailed metrics
  - job_name: 'openstack-exporter'
    scheme: https
    static_configs:
      - targets:
        - 'openstack-exporter:9180'
    scrape_interval: 60s
    scrape_timeout: 30s
    metrics_path: '/metrics'
    params:
      cloud: ['monitoring']

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    scheme: https
    tls_config:
      ca_file: /etc/prometheus/certs/ca.pem
    kubernetes_sd_configs:
      - role: node
        namespaces:
          names: ['federation-system', 'monitoring']
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):10250'
        target_label: __address__
        replacement: '${1}:9100'
      - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
        target_label: instance
      - target_label: __scheme__
        replacement: https

  # Burst Controller Service
  - job_name: 'burst-controller'
    scheme: https
    tls_config:
      ca_file: /etc/prometheus/certs/ca.pem
    static_configs:
      - targets:
        - 'burst-controller.federation.local:8080'
    scrape_interval: 15s
    metrics_path: '/metrics'
    headers:
      X-Federation-Token: 'file:///etc/prometheus/secrets/federation-token'

  # AWS CloudWatch Exporter
  - job_name: 'aws-cloudwatch'
    scheme: https
    static_configs:
      - targets:
        - 'cloudwatch-exporter:9106'
    scrape_interval: 300s  # 5 minutes
    scrape_timeout: 120s
    metrics_path: '/metrics'

  # Google Cloud Monitoring
  - job_name: 'gcp-monitoring'
    scheme: https
    static_configs:
      - targets:
        - 'gcp-exporter:9592'
    scrape_interval: 300s
    scrape_timeout: 120s
    metrics_path: '/metrics'

  # Azure Monitor Exporter  
  - job_name: 'azure-monitor'
    scheme: https
    static_configs:
      - targets:
        - 'azure-exporter:9276'
    scrape_interval: 300s
    scrape_timeout: 120s
    metrics_path: '/metrics'

  # Federation Network Monitoring
  - job_name: 'federation-networking'
    scheme: https
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: ['federation-networking']
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: (vpn-monitor|bgp-monitor|transit-gateway-monitor)
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics

  # Cost Monitoring Services
  - job_name: 'cost-monitoring'
    scheme: https
    static_configs:
      - targets:
        - 'cost-analyzer.federation.local:9003'
        - 'billing-exporter.federation.local:8080'
    scrape_interval: 3600s  # 1 hour
    scrape_timeout: 60s
    metrics_path: '/metrics'

  # Security and Compliance Monitoring
  - job_name: 'security-monitoring'
    scheme: https
    tls_config:
      ca_file: /etc/prometheus/certs/ca.pem
    static_configs:
      - targets:
        - 'vault.federation.local:8200'
        - 'opa-server.federation.local:8181'
        - 'falco-exporter.federation.local:9376'
    scrape_interval: 30s
    metrics_path: '/metrics'
    headers:
      X-Vault-Token: 'file:///etc/prometheus/secrets/vault-token'

  # Federation Service Discovery
  - job_name: 'federation-services'
    scheme: https
    consul_sd_configs:
      - server: 'consul.federation.local:8500'
        datacenter: 'federation-dc'
        services: ['federation-service']
        tags: ['monitoring', 'metrics']
        scheme: https
        tls_config:
          ca_file: /etc/prometheus/certs/ca.pem

  # Kubernetes Control Plane
  - job_name: 'kubernetes-apiservers'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: false
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: ['default']
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Pods for application metrics
  - job_name: 'kubernetes-pods'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: false
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['federation-system', 'burst-controller', 'monitoring']
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # External Service Monitoring
  - job_name: 'blackbox-exporter'
    scheme: https
    metrics_path: /probe
    params:
      module: [http_2xx_tls]
    static_configs:
      - targets:
        - 'https://keystone.openstack.local/v3'
        - 'https://burst-controller.federation.local/health'
        - 'https://vault.federation.local/v1/sys/health'
        - 'https://grafana.federation.local/api/health'
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 'blackbox-exporter.monitoring.svc.cluster.local:9115'

  # Custom Application Metrics
  - job_name: 'federation-applications'
    scheme: https
    file_sd_configs:
      - files:
        - '/etc/prometheus/file_sd/federation-apps.yml'
        refresh_interval: 60s
    relabel_configs:
      - source_labels: [__meta_federation_service_type]
        action: keep
        regex: (burst|cost|security|networking)
      - source_labels: [__meta_federation_environment]
        target_label: environment
      - source_labels: [__meta_federation_version]
        target_label: version

# Recording rules for performance optimization
recording_rules:
  - "/etc/prometheus/recording-rules/*.yml"

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 30d
    retention.size: 100GB
    wal-compression: true
    no-lockfile: false
  exemplars:
    max-exemplars: 100000

# Server configuration
web:
  listen-address: '0.0.0.0:9090'
  enable-admin-api: true
  enable-lifecycle: true
  external-url: 'https://prometheus.federation.local'
  route-prefix: '/'
  read-timeout: 5m
  max-connections: 512
  console.templates: '/etc/prometheus/consoles'
  console.libraries: '/etc/prometheus/console_libraries'

# TLS and authentication
tls_server_config:
  cert_file: /etc/prometheus/certs/prometheus.pem
  key_file: /etc/prometheus/certs/prometheus-key.pem
  client_ca_file: /etc/prometheus/certs/ca.pem
  client_auth_type: RequireAndVerifyClientCert

# Feature flags
feature_flags:
  - agent
  - exemplar-storage
  - expand-external-labels
  - memory-snapshot-on-shutdown
  - promql-at-modifier
  - promql-negative-offset
  - remote-write-receiver
  - extra-scrape-metrics
